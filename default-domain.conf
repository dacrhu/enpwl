server {
        listen 80;
        server_name %%DOMAIN%% www.%%DOMAIN%%;

    root /var/www/;

    location /.well-known {
        try_files $uri $uri/ =404;
    }

    location / {
        return 301 https://%%DOMAIN%%$request_uri;
    }
}

server {
        listen 443 ssl;
        server_name www.%%DOMAIN%%;
        
        client_max_body_size %%MAXBODYSIZE%%;
        large_client_header_buffers 4 48k;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /root/.acme.sh/%%DOMAIN%%/fullchain.cer;
    ssl_certificate_key /root/.acme.sh/%%DOMAIN%%/%%DOMAIN%%.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;


    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    ssl_dhparam /etc/nginx/certsdhparam.pem;
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0

    # HSTS (ngx_http_headers_module is required) (2592000 seconds = 30 days)
    add_header Strict-Transport-Security max-age=15552000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /root/.acme.sh/%%DOMAIN%%/ca.cer;

    location / {
        return 301 https://%%DOMAIN%%$request_uri;
    }
}

server {
        listen 443 ssl;
        server_name %%DOMAIN%%;
        
        client_max_body_size %%MAXBODYSIZE%%;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /root/.acme.sh/%%DOMAIN%%/fullchain.cer;
    ssl_certificate_key /root/.acme.sh/%%DOMAIN%%/%%DOMAIN%%.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;


    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (2592000 seconds = 30 days)
    add_header Strict-Transport-Security max-age=15552000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /root/.acme.sh/%%DOMAIN%%/ca.cer;

    location / {
	# disable cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://%%HOST%%:%%PORT%%/;
    }
}